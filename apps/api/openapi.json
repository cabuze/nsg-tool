{
  "openapi": "3.1.0",
  "info": {
    "title": "NSG Tool API",
    "version": "0.0.1",
    "description": "REST API for NSG tool."
  },
  "paths": {
    "/api/auth/csrf": {
      "post": {
        "operationId": "getCSRFToken",
        "summary": "Get CSRF token",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Get CSRF token route handler.",
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/login": {
      "post": {
        "operationId": "login",
        "summary": "Login an user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidCredentialsErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CSRFErrorResponse"
                }
              }
            }
          }
        },
        "description": "Login an user route handler.",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequestSchema"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "operationId": "logout",
        "summary": "Logout a user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponseSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "discriminator": {
                    "mapping": {
                      "errors/authorization": "#/components/schemas/AuthorizationErrorResponse",
                      "errors/csrf": "#/components/schemas/CSRFErrorResponse"
                    },
                    "propertyName": "type"
                  },
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/AuthorizationErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/CSRFErrorResponse"
                    }
                  ],
                  "title": "Response"
                }
              }
            }
          }
        },
        "description": "Logout an user route handler.",
        "tags": [
          "auth"
        ],
        "security": [
          {
            "SessionAuth": []
          }
        ]
      }
    },
    "/api/auth/me": {
      "get": {
        "operationId": "me",
        "summary": "Get the logged in user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeResponseSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationErrorResponse"
                }
              }
            }
          }
        },
        "description": "Get logged in user route handler.",
        "tags": [
          "auth"
        ],
        "security": [
          {
            "SessionAuth": []
          }
        ]
      }
    },
    "/api/users/": {
      "get": {
        "operationId": "listUsers",
        "summary": "List users",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserResponseSchema"
                  },
                  "title": "Response",
                  "type": "array"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationErrorResponse"
                }
              }
            }
          }
        },
        "description": "List users route handler.",
        "tags": [
          "users"
        ],
        "security": [
          {
            "SessionAuth": []
          }
        ]
      },
      "post": {
        "operationId": "createUser",
        "summary": "Create user",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "discriminator": {
                    "mapping": {
                      "errors/check-constraint": "#/components/schemas/CheckConstraintErrorResponse",
                      "errors/not-null-constraint": "#/components/schemas/NotNullConstraintErrorResponse",
                      "errors/unique-constraint": "#/components/schemas/UniqueConstraintErrorResponse"
                    },
                    "propertyName": "type"
                  },
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/CheckConstraintErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/NotNullConstraintErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/UniqueConstraintErrorResponse"
                    }
                  ],
                  "title": "Response"
                }
              }
            }
          }
        },
        "description": "Create user route handler.",
        "tags": [
          "users"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateSchema"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "SessionAuth": []
          }
        ]
      }
    },
    "/api/users/{id}": {
      "get": {
        "operationId": "getUserById",
        "summary": "Get user by id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "title": "Id",
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultipleObjectsReturnedErrorResponse"
                }
              }
            }
          }
        },
        "description": "Get user by id route handler.",
        "tags": [
          "users"
        ],
        "security": [
          {
            "SessionAuth": []
          }
        ]
      },
      "patch": {
        "operationId": "updateUser",
        "summary": "Update user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "title": "Id",
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "discriminator": {
                    "mapping": {
                      "errors/check-constraint": "#/components/schemas/CheckConstraintErrorResponse",
                      "errors/multiple-objects-returned": "#/components/schemas/MultipleObjectsReturnedErrorResponse",
                      "errors/not-null-constraint": "#/components/schemas/NotNullConstraintErrorResponse",
                      "errors/unique-constraint": "#/components/schemas/UniqueConstraintErrorResponse"
                    },
                    "propertyName": "type"
                  },
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/MultipleObjectsReturnedErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/CheckConstraintErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/NotNullConstraintErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/UniqueConstraintErrorResponse"
                    }
                  ],
                  "title": "Response"
                }
              }
            }
          }
        },
        "description": "Update user route handler.",
        "tags": [
          "users"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateSchema"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "SessionAuth": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteUser",
        "summary": "Delete user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "title": "Id",
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDeleteResponseSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "discriminator": {
                    "mapping": {
                      "errors/multiple-objects-returned": "#/components/schemas/MultipleObjectsReturnedErrorResponse",
                      "errors/protection": "#/components/schemas/ProtectedErrorResponse"
                    },
                    "propertyName": "type"
                  },
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/MultipleObjectsReturnedErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ProtectedErrorResponse"
                    }
                  ],
                  "title": "Response"
                }
              }
            }
          }
        },
        "description": "Delete user route handler.",
        "tags": [
          "users"
        ],
        "security": [
          {
            "SessionAuth": []
          }
        ]
      }
    },
    "/api/system/version": {
      "get": {
        "operationId": "getVersion",
        "summary": "Get the API version",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemVersionSchema"
                }
              }
            }
          }
        },
        "description": "Get the API version.",
        "tags": [
          "system"
        ],
        "security": [
          {
            "SessionAuth": []
          }
        ]
      }
    },
    "/api/system/description": {
      "get": {
        "operationId": "getDescription",
        "summary": "Get the API description",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemDescriptionSchema"
                }
              }
            }
          }
        },
        "description": "Get the API description.",
        "tags": [
          "system"
        ],
        "security": [
          {
            "SessionAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "LoginResponseSchema": {
        "additionalProperties": false,
        "description": "Login response schema.",
        "properties": {
          "id": {
            "description": "The id of the user.",
            "title": "Id",
            "type": "integer"
          },
          "display_name": {
            "description": "The display name of the user.",
            "strip_whitespace": null,
            "title": "Display Name",
            "to_lower": null,
            "to_upper": null,
            "type": "string"
          },
          "email": {
            "description": "The email of the user.",
            "format": "email",
            "title": "Email",
            "type": "string"
          },
          "is_active": {
            "description": "The is active status of the user.",
            "title": "Is Active",
            "type": "boolean"
          },
          "is_staff": {
            "description": "The is staff status of the user.",
            "title": "Is Staff",
            "type": "boolean"
          },
          "is_superuser": {
            "description": "The is superuser status of the user.",
            "title": "Is Superuser",
            "type": "boolean"
          },
          "last_login": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "The the timestamp of the last login of the user.",
            "title": "Last Login"
          },
          "created_at": {
            "description": "The timestamp of creation of the user.",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "updated_at": {
            "description": "The timestamp of the last update of the user.",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          }
        },
        "required": [
          "id",
          "display_name",
          "email",
          "is_active",
          "is_staff",
          "is_superuser",
          "last_login",
          "created_at",
          "updated_at"
        ],
        "title": "LoginResponseSchema",
        "type": "object"
      },
      "InvalidCredentialsErrorResponse": {
        "description": "Invalid credentials error response.",
        "properties": {
          "type": {
            "title": "Type",
            "type": "string"
          },
          "status": {
            "const": 401,
            "title": "Status",
            "type": "integer"
          },
          "path": {
            "title": "Path",
            "type": "string"
          },
          "operation_id": {
            "title": "Operation Id",
            "type": "string"
          },
          "message": {
            "const": "Invalid credentials",
            "title": "Message",
            "type": "string"
          }
        },
        "required": [
          "type",
          "status",
          "path",
          "operation_id",
          "message"
        ],
        "title": "InvalidCredentialsErrorResponse",
        "type": "object"
      },
      "CSRFErrorResponse": {
        "description": "CSRF error response class.",
        "properties": {
          "type": {
            "const": "errors/csrf",
            "title": "Type",
            "type": "string"
          },
          "status": {
            "const": 403,
            "title": "Status",
            "type": "integer"
          },
          "path": {
            "title": "Path",
            "type": "string"
          },
          "operation_id": {
            "title": "Operation Id",
            "type": "string"
          }
        },
        "required": [
          "type",
          "status",
          "path",
          "operation_id"
        ],
        "title": "CSRFErrorResponse",
        "type": "object"
      },
      "LoginRequestSchema": {
        "additionalProperties": false,
        "description": "Login request schema.",
        "properties": {
          "email": {
            "description": "The email of the user.",
            "title": "Email",
            "type": "string"
          },
          "password": {
            "description": "The password of the user.",
            "strip_whitespace": null,
            "title": "Password",
            "to_lower": null,
            "to_upper": null,
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ],
        "title": "LoginRequestSchema",
        "type": "object"
      },
      "LogoutResponseSchema": {
        "additionalProperties": false,
        "description": "Logout response schema.",
        "properties": {
          "message": {
            "const": "Logout successful",
            "description": "The message of the logout response.",
            "strip_whitespace": null,
            "title": "Message",
            "to_lower": null,
            "to_upper": null,
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "title": "LogoutResponseSchema",
        "type": "object"
      },
      "AuthenticationErrorResponse": {
        "description": "Authentication error response class.",
        "properties": {
          "type": {
            "const": "errors/authentication",
            "title": "Type",
            "type": "string"
          },
          "status": {
            "const": 401,
            "title": "Status",
            "type": "integer"
          },
          "path": {
            "title": "Path",
            "type": "string"
          },
          "operation_id": {
            "title": "Operation Id",
            "type": "string"
          }
        },
        "required": [
          "type",
          "status",
          "path",
          "operation_id"
        ],
        "title": "AuthenticationErrorResponse",
        "type": "object"
      },
      "AuthorizationErrorResponse": {
        "description": "Authorization error response class.",
        "properties": {
          "type": {
            "const": "errors/authorization",
            "title": "Type",
            "type": "string"
          },
          "status": {
            "const": 403,
            "title": "Status",
            "type": "integer"
          },
          "path": {
            "title": "Path",
            "type": "string"
          },
          "operation_id": {
            "title": "Operation Id",
            "type": "string"
          },
          "permissions": {
            "items": {
              "type": "string"
            },
            "title": "Permissions",
            "type": "array"
          }
        },
        "required": [
          "type",
          "status",
          "path",
          "operation_id",
          "permissions"
        ],
        "title": "AuthorizationErrorResponse",
        "type": "object"
      },
      "MeResponseSchema": {
        "additionalProperties": false,
        "description": "Me response schema.",
        "properties": {
          "id": {
            "description": "The id of the user.",
            "title": "Id",
            "type": "integer"
          },
          "display_name": {
            "description": "The display name of the user.",
            "strip_whitespace": null,
            "title": "Display Name",
            "to_lower": null,
            "to_upper": null,
            "type": "string"
          },
          "email": {
            "description": "The email of the user.",
            "format": "email",
            "title": "Email",
            "type": "string"
          },
          "is_active": {
            "description": "The is active status of the user.",
            "title": "Is Active",
            "type": "boolean"
          },
          "is_staff": {
            "description": "The is staff status of the user.",
            "title": "Is Staff",
            "type": "boolean"
          },
          "is_superuser": {
            "description": "The is superuser status of the user.",
            "title": "Is Superuser",
            "type": "boolean"
          },
          "last_login": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "The the timestamp of the last login of the user.",
            "title": "Last Login"
          },
          "created_at": {
            "description": "The timestamp of creation of the user.",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "updated_at": {
            "description": "The timestamp of the last update of the user.",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          }
        },
        "required": [
          "id",
          "display_name",
          "email",
          "is_active",
          "is_staff",
          "is_superuser",
          "last_login",
          "created_at",
          "updated_at"
        ],
        "title": "MeResponseSchema",
        "type": "object"
      },
      "UserResponseSchema": {
        "additionalProperties": false,
        "description": "User response schema.",
        "properties": {
          "id": {
            "description": "The id of the user.",
            "title": "Id",
            "type": "integer"
          },
          "display_name": {
            "description": "The display name of the user.",
            "strip_whitespace": null,
            "title": "Display Name",
            "to_lower": null,
            "to_upper": null,
            "type": "string"
          },
          "email": {
            "description": "The email of the user.",
            "format": "email",
            "title": "Email",
            "type": "string"
          },
          "is_active": {
            "description": "The is active status of the user.",
            "title": "Is Active",
            "type": "boolean"
          },
          "is_staff": {
            "description": "The is staff status of the user.",
            "title": "Is Staff",
            "type": "boolean"
          },
          "is_superuser": {
            "description": "The is superuser status of the user.",
            "title": "Is Superuser",
            "type": "boolean"
          },
          "last_login": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "The the timestamp of the last login of the user.",
            "title": "Last Login"
          },
          "created_at": {
            "description": "The timestamp of creation of the user.",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "updated_at": {
            "description": "The timestamp of the last update of the user.",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          }
        },
        "required": [
          "id",
          "display_name",
          "email",
          "is_active",
          "is_staff",
          "is_superuser",
          "last_login",
          "created_at",
          "updated_at"
        ],
        "title": "UserResponseSchema",
        "type": "object"
      },
      "CheckConstraintErrorResponse": {
        "description": "CheckConstraint error response class.",
        "properties": {
          "type": {
            "const": "errors/check-constraint",
            "title": "Type",
            "type": "string"
          },
          "status": {
            "const": 422,
            "title": "Status",
            "type": "integer"
          },
          "path": {
            "title": "Path",
            "type": "string"
          },
          "operation_id": {
            "title": "Operation Id",
            "type": "string"
          },
          "resource": {
            "title": "Resource",
            "type": "string"
          }
        },
        "required": [
          "type",
          "status",
          "path",
          "operation_id",
          "resource"
        ],
        "title": "CheckConstraintErrorResponse",
        "type": "object"
      },
      "NotNullConstraintErrorResponse": {
        "description": "NotNullConstraint error response class.",
        "properties": {
          "type": {
            "const": "errors/not-null-constraint",
            "title": "Type",
            "type": "string"
          },
          "status": {
            "const": 422,
            "title": "Status",
            "type": "integer"
          },
          "path": {
            "title": "Path",
            "type": "string"
          },
          "operation_id": {
            "title": "Operation Id",
            "type": "string"
          },
          "resource": {
            "title": "Resource",
            "type": "string"
          },
          "fields": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "number"
                },
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ]
            },
            "title": "Fields",
            "type": "object"
          }
        },
        "required": [
          "type",
          "status",
          "path",
          "operation_id",
          "resource",
          "fields"
        ],
        "title": "NotNullConstraintErrorResponse",
        "type": "object"
      },
      "UniqueConstraintErrorResponse": {
        "description": "UniqueConstraint error response class.",
        "properties": {
          "type": {
            "const": "errors/unique-constraint",
            "title": "Type",
            "type": "string"
          },
          "status": {
            "const": 422,
            "title": "Status",
            "type": "integer"
          },
          "path": {
            "title": "Path",
            "type": "string"
          },
          "operation_id": {
            "title": "Operation Id",
            "type": "string"
          },
          "resource": {
            "title": "Resource",
            "type": "string"
          },
          "fields": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "number"
                },
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ]
            },
            "title": "Fields",
            "type": "object"
          }
        },
        "required": [
          "type",
          "status",
          "path",
          "operation_id",
          "resource",
          "fields"
        ],
        "title": "UniqueConstraintErrorResponse",
        "type": "object"
      },
      "UserCreateSchema": {
        "additionalProperties": false,
        "description": "User create schema.",
        "properties": {
          "display_name": {
            "description": "The display name of the user.",
            "strip_whitespace": null,
            "title": "Display Name",
            "to_lower": null,
            "to_upper": null,
            "type": "string"
          },
          "email": {
            "description": "The email of the user.",
            "format": "email",
            "title": "Email",
            "type": "string"
          },
          "password": {
            "description": "The password of the user.",
            "strip_whitespace": null,
            "title": "Password",
            "to_lower": null,
            "to_upper": null,
            "type": "string"
          },
          "is_active": {
            "default": true,
            "description": "The is active status of the user.",
            "title": "Is Active",
            "type": "boolean"
          },
          "is_staff": {
            "default": false,
            "description": "The is staff status of the user.",
            "title": "Is Staff",
            "type": "boolean"
          },
          "is_superuser": {
            "default": false,
            "description": "The is superuser status of the user.",
            "title": "Is Superuser",
            "type": "boolean"
          }
        },
        "required": [
          "display_name",
          "email",
          "password"
        ],
        "title": "UserCreateSchema",
        "type": "object"
      },
      "NotFoundErrorResponse": {
        "description": "NotFound error response class.",
        "properties": {
          "type": {
            "const": "errors/not-found",
            "title": "Type",
            "type": "string"
          },
          "status": {
            "const": 404,
            "title": "Status",
            "type": "integer"
          },
          "path": {
            "title": "Path",
            "type": "string"
          },
          "operation_id": {
            "title": "Operation Id",
            "type": "string"
          },
          "resource": {
            "title": "Resource",
            "type": "string"
          },
          "fields": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "number"
                },
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ]
            },
            "title": "Fields",
            "type": "object"
          }
        },
        "required": [
          "type",
          "status",
          "path",
          "operation_id",
          "resource",
          "fields"
        ],
        "title": "NotFoundErrorResponse",
        "type": "object"
      },
      "MultipleObjectsReturnedErrorResponse": {
        "description": "MultipleObjectsReturned error response class.",
        "properties": {
          "type": {
            "const": "errors/multiple-objects-returned",
            "title": "Type",
            "type": "string"
          },
          "status": {
            "const": 422,
            "title": "Status",
            "type": "integer"
          },
          "path": {
            "title": "Path",
            "type": "string"
          },
          "operation_id": {
            "title": "Operation Id",
            "type": "string"
          },
          "resource": {
            "title": "Resource",
            "type": "string"
          },
          "fields": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "number"
                },
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ]
            },
            "title": "Fields",
            "type": "object"
          }
        },
        "required": [
          "type",
          "status",
          "path",
          "operation_id",
          "resource",
          "fields"
        ],
        "title": "MultipleObjectsReturnedErrorResponse",
        "type": "object"
      },
      "UserUpdateSchema": {
        "additionalProperties": false,
        "description": "User update schema.",
        "properties": {
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "The display name of the user.",
            "strip_whitespace": null,
            "title": "Display Name",
            "to_lower": null,
            "to_upper": null
          },
          "email": {
            "anyOf": [
              {
                "format": "email",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "The email of the user.",
            "title": "Email"
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "The password of the user.",
            "strip_whitespace": null,
            "title": "Password",
            "to_lower": null,
            "to_upper": null
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "description": "The is active status of the user.",
            "title": "Is Active"
          },
          "is_staff": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "description": "The is staff status of the user.",
            "title": "Is Staff"
          },
          "is_superuser": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "description": "The is superuser status of the user.",
            "title": "Is Superuser"
          }
        },
        "title": "UserUpdateSchema",
        "type": "object"
      },
      "UserDeleteResponseSchema": {
        "additionalProperties": false,
        "description": "User delete response schema.",
        "properties": {},
        "title": "UserDeleteResponseSchema",
        "type": "object"
      },
      "ProtectedErrorResponse": {
        "description": "Protected error response class.",
        "properties": {
          "type": {
            "const": "errors/protection",
            "title": "Type",
            "type": "string"
          },
          "status": {
            "const": 422,
            "title": "Status",
            "type": "integer"
          },
          "path": {
            "title": "Path",
            "type": "string"
          },
          "operation_id": {
            "title": "Operation Id",
            "type": "string"
          },
          "resource": {
            "title": "Resource",
            "type": "string"
          },
          "foreign_items": {
            "additionalProperties": {
              "items": {
                "type": "integer"
              },
              "type": "array"
            },
            "title": "Foreign Items",
            "type": "object"
          }
        },
        "required": [
          "type",
          "status",
          "path",
          "operation_id",
          "resource",
          "foreign_items"
        ],
        "title": "ProtectedErrorResponse",
        "type": "object"
      },
      "SystemVersionSchema": {
        "description": "System version schema.",
        "properties": {
          "version": {
            "description": "The API version.",
            "strip_whitespace": null,
            "title": "Version",
            "to_lower": null,
            "to_upper": null,
            "type": "string"
          }
        },
        "required": [
          "version"
        ],
        "title": "SystemVersionSchema",
        "type": "object"
      },
      "SystemDescriptionSchema": {
        "description": "System description schema.",
        "properties": {
          "description": {
            "description": "The API description.",
            "strip_whitespace": null,
            "title": "Description",
            "to_lower": null,
            "to_upper": null,
            "type": "string"
          }
        },
        "required": [
          "description"
        ],
        "title": "SystemDescriptionSchema",
        "type": "object"
      }
    },
    "securitySchemes": {
      "SessionAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "sessionid"
      }
    }
  },
  "servers": []
}